public class org.junit.Assert {
  protected org.junit.Assert();
  public static void assertTrue(java.lang.String, boolean);
  public static void assertTrue(boolean);
  public static void assertFalse(java.lang.String, boolean);
  public static void assertFalse(boolean);
  public static void fail(java.lang.String);
  public static void fail();
  public static void assertEquals(java.lang.String, java.lang.Object, java.lang.Object);
  public static void assertEquals(java.lang.Object, java.lang.Object);
  public static void assertNotEquals(java.lang.String, java.lang.Object, java.lang.Object);
  public static void assertNotEquals(java.lang.Object, java.lang.Object);
  public static void assertNotEquals(java.lang.String, long, long);
  public static void assertNotEquals(long, long);
  public static void assertNotEquals(java.lang.String, double, double, double);
  public static void assertNotEquals(double, double, double);
  public static void assertNotEquals(float, float, float);
  public static void assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(java.lang.Object[], java.lang.Object[]);
  public static void assertArrayEquals(java.lang.String, boolean[], boolean[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(boolean[], boolean[]);
  public static void assertArrayEquals(java.lang.String, byte[], byte[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(byte[], byte[]);
  public static void assertArrayEquals(java.lang.String, char[], char[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(char[], char[]);
  public static void assertArrayEquals(java.lang.String, short[], short[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(short[], short[]);
  public static void assertArrayEquals(java.lang.String, int[], int[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(int[], int[]);
  public static void assertArrayEquals(java.lang.String, long[], long[]) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(long[], long[]);
  public static void assertArrayEquals(java.lang.String, double[], double[], double) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(double[], double[], double);
  public static void assertArrayEquals(java.lang.String, float[], float[], float) throws org.junit.internal.ArrayComparisonFailure;
  public static void assertArrayEquals(float[], float[], float);
  public static void assertEquals(java.lang.String, double, double, double);
  public static void assertEquals(java.lang.String, float, float, float);
  public static void assertNotEquals(java.lang.String, float, float, float);
  public static void assertEquals(long, long);
  public static void assertEquals(java.lang.String, long, long);
  public static void assertEquals(double, double);
  public static void assertEquals(java.lang.String, double, double);
  public static void assertEquals(double, double, double);
  public static void assertEquals(float, float, float);
  public static void assertNotNull(java.lang.String, java.lang.Object);
  public static void assertNotNull(java.lang.Object);
  public static void assertNull(java.lang.String, java.lang.Object);
  public static void assertNull(java.lang.Object);
  public static void assertSame(java.lang.String, java.lang.Object, java.lang.Object);
  public static void assertSame(java.lang.Object, java.lang.Object);
  public static void assertNotSame(java.lang.String, java.lang.Object, java.lang.Object);
  public static void assertNotSame(java.lang.Object, java.lang.Object);
  static java.lang.String format(java.lang.String, java.lang.Object, java.lang.Object);
  public static void assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[]);
  public static void assertEquals(java.lang.Object[], java.lang.Object[]);
  public static <T> void assertThat(T, org.hamcrest.Matcher<? super T>);
  public static <T> void assertThat(java.lang.String, T, org.hamcrest.Matcher<? super T>);
  public static <T extends java.lang.Throwable> T assertThrows(java.lang.Class<T>, org.junit.function.ThrowingRunnable);
  public static <T extends java.lang.Throwable> T assertThrows(java.lang.String, java.lang.Class<T>, org.junit.function.ThrowingRunnable);
}
